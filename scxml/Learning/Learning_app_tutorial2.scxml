<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml" version="1.0" binding="early" xmlns:qt="http://www.qt.io/2015/02/scxml-ext" name="Learning_service" qt:editorversion="10.0.2">
    <final id="Final_1_app_service">
        <qt:editorinfo geometry="992.10;-114.38;-20;-20;40;40" scenegeometry="992.10;-114.38;972.10;-134.38;40;40"/>
    </final>
    <state id="Learning_app_service" initial="Service.LoadFileIO">
        <qt:editorinfo geometry="-608.38;-461.09;374.06;194.44;1123.96;1130.49" scenegeometry="-608.38;-461.09;-234.32;-266.65;1123.96;1130.49"/>
        <datamodel>
            <data id="PROJECT_NAME" expr="::AppName"/>
        </datamodel>
        <transition type="external" event="Bio.Cell.Destroyed" target="Final_1_app_service">
            <qt:editorinfo movePoint="0;4.21" startTargetFactors="95.75;26.69"/>
        </transition>
        <state id="Service.Running" initial="Service.Home">
            <qt:editorinfo geometry="1417.49;1380.16;-1022.65;-741.30;1051.01;641.32" scenegeometry="809.11;919.07;-213.54;177.77;1051.01;641.32"/>
            <onentry>
                <script>Bio.Chromosome.AddProto({&quot;filename&quot;:&quot;./Generic_client.proto&quot;})</script>
                <script>Bio.Chromosome.AddProto({&quot;filename&quot;:&quot;../Account/Account.proto&quot;})</script>
                <script>Bio.Chromosome.AddProto({&quot;filename&quot;:&quot;../Account/Account_client.proto&quot;})</script>
                <script>Bio.Chromosome.AddProto({&quot;filename&quot;:&quot;../Example/Example.proto&quot;})</script>
                <script>FileIO.Read({&quot;filename&quot;:&quot;./Layout/Layout_App.json&quot;,&quot;target&quot;:&quot;PROJECT_NAME.LayoutTemplate.layout&quot;})</script>
                <assign location="PROJECT_NAME.LayoutTemplate.appMainRoot" expr="[]"/>
                <assign location="PROJECT_NAME.LayoutTemplate.appDialogRoot" expr="[]"/>
                <assign location="PROJECT_NAME.LayoutTemplate.appShowDialog" expr="false"/>
                <assign location="PROJECT_NAME.LayoutTemplate.methodList" expr="[]"/>
            </onentry>
            <state id="Service.Home" initial="Home.GetList">
                <qt:editorinfo geometry="379.26;-817.08;-1380.67;154.26;1009.77;506.28" scenegeometry="1188.37;101.99;-192.30;256.25;1009.77;506.28"/>
                <onentry>
                    <script>FileIO.Read({&quot;filename&quot;:&quot;../PROJECT_NAME/Layout/Layout_App_Main.json&quot;,&quot;target&quot;:&quot;PROJECT_NAME.LayoutTemplate.content&quot;})</script>
                    <script>FileIO.Read({&quot;filename&quot;:&quot;../PROJECT_NAME/Layout/Layout_App_Main_Items.json&quot;,&quot;target&quot;:&quot;PROJECT_NAME.LayoutTemplate.helper&quot;})</script>
                    <assign location="PROJECT_NAME.HomeView.index" expr="0"/>
                </onentry>
                <transition type="internal" event="ShowUI">
                    <assign location="PROJECT_NAME.LayoutTemplate.appMainRoot" expr="::PROJECT_NAME.LayoutTemplate.content[layout]"/>
                    <assign location="PROJECT_NAME.LayoutTemplate.methodList" expr="::PROJECT_NAME.LayoutTemplate.content[methodList]"/>
                    <send event="VuetifyKits.Send">
                        <param name="view" expr="::PROJECT_NAME.LayoutTemplate.layout"/>
                    </send>
                </transition>
                <state id="Home.GetList">
                    <qt:editorinfo geometry="-634.97;273.32;-443.53;-48.68;463.53;144.68" scenegeometry="533.38;555.41;89.85;506.73;463.53;144.68"/>
                    <invoke id="GetExampleList" src="../Example/DB/CallSP_GetExampleList.scxml"/>
                    <onentry>
                        <assign location="PROJECT_NAME.HomeView.list" expr="[]"/>
                        <assign location="PROJECT_NAME.HomeView.map" expr="{}"/>
                        <send event="PROJECT_NAME.GetExampleList">
                            <param name="ownerId" expr="::PROJECT_NAME.Account.userId"/>
                            <param name="startTime" expr="1980-01-01 00:00:00"/>
                            <param name="endTime" expr="2999-12-31 23:59:59"/>
                            <param name="isAvailableOnly" expr="true"/>
                        </send>
                    </onentry>
                    <transition type="internal" event="PROJECT_NAME.GetExampleList.Result">
                        <assign location="PROJECT_NAME.HomeView.map[::PROJECT_NAME.GetExampleList.Result.exampleId][*]" expr="::PROJECT_NAME.GetExampleList.Result.*"/>
                    </transition>
                    <transition type="external" event="Database.Task.Done.PROJECT_NAME.GetExampleList" target="Home.TrafficLight">
                        <qt:editorinfo startTargetFactors="78.14;74.86"/>
                    </transition>
                </state>
                <state id="Home.TrafficLight">
                    <qt:editorinfo geometry="-228.40;489.05;-1030.84;-53.87;868.34;187.58" scenegeometry="959.97;591.04;-70.87;537.17;868.34;187.58"/>
                    <onentry>
                        <script>Bio.Chromosome.AddProto({&quot;filename&quot;:&quot;../Learning/proto/Learning_client.proto&quot;})</script>
                        <script>FileIO.Read({&quot;filename&quot;:&quot;../Learning/TrafficLight/Layout/Layout_App_Main_Item.json&quot;,&quot;target&quot;:&quot;PROJECT_NAME.LayoutTemplate.trafficLightItem&quot;})</script>
                        <assign location="PROJECT_NAME.TrafficLightView.GreenStyle" expr="::PROJECT_NAME.LayoutTemplate.trafficLightItem[GreenLight]"/>
                        <assign location="PROJECT_NAME.TrafficLightView.YellowStyle" expr="::PROJECT_NAME.LayoutTemplate.trafficLightItem[YellowDark]"/>
                        <assign location="PROJECT_NAME.TrafficLightView.RedStyle" expr="::PROJECT_NAME.LayoutTemplate.trafficLightItem[RedDark]"/>
                        <assign location="PROJECT_NAME.HomeView.list" expr="[]"/>
                        <assign location="PROJECT_NAME.HomeView.list[]" expr="::PROJECT_NAME.LayoutTemplate.SubItem.content[tutorial2]"/>
                        <script>FileIO.Read({&quot;filename&quot;:&quot;../Learning/TrafficLight/TrafficLight_app_service.scxml&quot;,&quot;target&quot;:&quot;PROJECT_NAME.TrafficLightView.exportContent&quot;})</script>
                        <foreach array="PROJECT_NAME.Global.const[SCXML_ESCAPE_LIST]" item="value" index="index">
                            <if cond="::index &lt; ::PROJECT_NAME.Global.const[SCXML_ESCAPE_LIST][].length - 1">
                                <script>Bio.Chromosome.ReplaceString({&quot;source_model_name&quot;:&quot;PROJECT_NAME.TrafficLightView.exportContent&quot;,&quot;to_be_replaced&quot;:&quot;::value[to_be_replaced]&quot;,&quot;replace_with&quot;:&quot;::value[replace_with]&quot;,&quot;no_preprocessing&quot;:&quot;true&quot;,&quot;target_model_name&quot;:&quot;PROJECT_NAME.TrafficLightView.exportContent&quot;})</script>
                                <else/>
                                <script>Bio.Chromosome.ReplaceString({&quot;source_model_name&quot;:&quot;PROJECT_NAME.TrafficLightView.exportContent&quot;,&quot;to_be_replaced&quot;:&quot;::value[to_be_replaced]&quot;,&quot;replace_with&quot;:&quot;::value[replace_with]&quot;,&quot;no_preprocessing&quot;:&quot;true&quot;,&quot;target_model_name&quot;:&quot;PROJECT_NAME.TrafficLightView.normal&quot;})</script>
                            </if>
                        </foreach>
                        <script>FileIO.Read({&quot;filename&quot;:&quot;../Learning/TrafficLight/TrafficLight_app_service_reversed.scxml&quot;,&quot;target&quot;:&quot;PROJECT_NAME.TrafficLightView.exportContent&quot;})</script>
                        <foreach array="PROJECT_NAME.Global.const[SCXML_ESCAPE_LIST]" item="value" index="index">
                            <if cond="::index &lt; ::PROJECT_NAME.Global.const[SCXML_ESCAPE_LIST][].length - 1">
                                <script>Bio.Chromosome.ReplaceString({&quot;source_model_name&quot;:&quot;PROJECT_NAME.TrafficLightView.exportContent&quot;,&quot;to_be_replaced&quot;:&quot;::value[to_be_replaced]&quot;,&quot;replace_with&quot;:&quot;::value[replace_with]&quot;,&quot;no_preprocessing&quot;:&quot;true&quot;,&quot;target_model_name&quot;:&quot;PROJECT_NAME.TrafficLightView.exportContent&quot;})</script>
                                <else/>
                                <script>Bio.Chromosome.ReplaceString({&quot;source_model_name&quot;:&quot;PROJECT_NAME.TrafficLightView.exportContent&quot;,&quot;to_be_replaced&quot;:&quot;::value[to_be_replaced]&quot;,&quot;replace_with&quot;:&quot;::value[replace_with]&quot;,&quot;no_preprocessing&quot;:&quot;true&quot;,&quot;target_model_name&quot;:&quot;PROJECT_NAME.TrafficLightView.reversed&quot;})</script>
                            </if>
                        </foreach>
                    </onentry>
                    <transition type="internal" event="ShowUI">
                        <assign location="PROJECT_NAME.HomeView.list[0]" expr="::PROJECT_NAME.LayoutTemplate.SubItem.content[tutorial2]"/>
                        <assign location="PROJECT_NAME.LayoutTemplate.appMainRoot" expr="::PROJECT_NAME.LayoutTemplate.content[layout]"/>
                        <assign location="PROJECT_NAME.LayoutTemplate.methodList" expr="::PROJECT_NAME.LayoutTemplate.content[methodList]"/>
                        <assign location="PROJECT_NAME.LayoutTemplate.methodList[]" expr="::PROJECT_NAME.LayoutTemplate.SubItem.content[methodList][*]"/>
                        <send event="VuetifyKits.Send">
                            <param name="view" expr="::PROJECT_NAME.LayoutTemplate.layout"/>
                            <param name="show_result" expr="false"/>
                        </send>
                    </transition>
                    <transition type="external" event="Generic.Client.Clicked" target="Home.GetList" cond="::Generic.Client.Clicked.id=&quot;go_back&quot; || ::Generic.Client.Clicked.id=&quot;btn_back&quot;">
                        <qt:editorinfo endTargetFactors="27.83;63.09"/>
                    </transition>
                    <state id="TrafficLight.Default">
                        <qt:editorinfo geometry="-817.84;62.91;-92;-50;184;100" scenegeometry="110.96;1121.51;18.96;1071.51;184;100"/>
                        <invoke id="TrafficLightMain1" src="../Learning/TrafficLight/TrafficLight_app_service.scxml"/>
                        <transition type="external" event="PROJECT_NAME.Client.UploadFiles" target="TrafficLight.Customized" cond="::PROJECT_NAME.Client.UploadFiles.fileList[].length &gt; 0">
                            <if cond="'::PROJECT_NAME.Client.UploadFiles.fileList[0].type'='scxml'">
                                <assign location="PROJECT_NAME.TrafficLightView.*" expr="::PROJECT_NAME.Client.UploadFiles.fileList.*"/>
                            </if>
                        </transition>
                    </state>
                    <state id="TrafficLight.Customized">
                        <qt:editorinfo geometry="-209.38;63.71;-285;-50;310.60;100" scenegeometry="719.42;1122.31;434.42;1072.31;310.60;100"/>
                        <invoke id="TrafficLightMain2" src="../Learning/TrafficLight/no_name" srcexpr="PROJECT_NAME.TrafficLightView.data"/>
                        <transition type="external" event="PROJECT_NAME.Client.UploadFiles" target="TrafficLight.Customized" cond="::PROJECT_NAME.Client.UploadFiles.fileList[].length &gt; 0">
                            <if cond="'::PROJECT_NAME.Client.UploadFiles.fileList[0].type'='scxml'">
                                <assign location="PROJECT_NAME.TrafficLightView.*" expr="::PROJECT_NAME.Client.UploadFiles.fileList.*"/>
                            </if>
                        </transition>
                    </state>
                </state>
            </state>
            <transition type="internal" event="Generic.Client.Clicked" cond="::Generic.Client.Clicked.id==&quot;btn_back&quot;" target="Service.QueryExit"/>
            <transition type="internal" event="Generic.Client.Clicked" cond="::Generic.Client.Clicked.id==&quot;app_home_logout&quot;" target="Service.QueryLogout"/>
        </state>
        <state id="Service.LoadFileIO">
            <qt:editorinfo geometry="559.12;479.28;-90;-50;180;100" scenegeometry="-49.26;18.19;-139.26;-31.81;180;100"/>
            <onentry>
                <script>Bio.Cell.NewRNA({&quot;name&quot;:&quot;FileIO&quot;})</script>
            </onentry>
            <transition type="external" target="Service.Running" cond="::return.Bio.Cell.NewRNA"/>
        </state>
        <state id="Service.QueryExit">
            <qt:editorinfo geometry="977.07;352.27;-204;-50;290.50;100" scenegeometry="372.61;-95.12;168.61;-145.12;290.50;100"/>
            <onentry>
                <assign location="PROJECT_NAME.LayoutTemplate.appDialogRoot" expr="::PROJECT_NAME.LayoutTemplate.helper[app_exit_app]"/>
                <assign location="PROJECT_NAME.LayoutTemplate.appMainRoot" expr="::PROJECT_NAME.LayoutTemplate.content[layout]"/>
                <assign location="PROJECT_NAME.LayoutTemplate.appShowDialog" expr="true"/>
                <send event="VuetifyKits.Send">
                    <param name="view" expr="::PROJECT_NAME.LayoutTemplate.layout"/>
                </send>
            </onentry>
            <onexit>
                <assign location="PROJECT_NAME.LayoutTemplate.appShowDialog" expr="false"/>
            </onexit>
            <transition type="external" event="Generic.Client.Clicked" target="Service.Running" cond="::Generic.Client.Clicked.id=&quot;go_back&quot;">
                <qt:editorinfo endTargetFactors="64.58;5.37"/>
            </transition>
            <transition type="external" event="Generic.Client.Clicked" target="Final_1_app_service" cond="::Generic.Client.Clicked.id=&quot;app_exit_app_confirm&quot;">
                <send event="PROJECT_NAME.ExitApp"/>
            </transition>
        </state>
        <state id="Service.QueryLogout">
            <qt:editorinfo geometry="1391.52;499.98;-204;-50;290.50;100" scenegeometry="783.14;38.89;579.14;-11.11;290.50;100"/>
            <onentry>
                <assign location="PROJECT_NAME.LayoutTemplate.appDialogRoot" expr="::PROJECT_NAME.LayoutTemplate.helper[app_home_logout]"/>
                <assign location="PROJECT_NAME.LayoutTemplate.appMainRoot" expr="::PROJECT_NAME.LayoutTemplate.content[layout]"/>
                <assign location="PROJECT_NAME.LayoutTemplate.appShowDialog" expr="true"/>
                <send event="VuetifyKits.Send">
                    <param name="view" expr="::PROJECT_NAME.LayoutTemplate.layout"/>
                </send>
            </onentry>
            <onexit>
                <assign location="PROJECT_NAME.LayoutTemplate.appShowDialog" expr="false"/>
            </onexit>
            <transition type="external" event="Generic.Client.Clicked" target="Service.Running" cond="::Generic.Client.Clicked.id=&quot;go_back&quot;">
                <qt:editorinfo endTargetFactors="85.84;3.30"/>
            </transition>
            <transition type="external" event="Generic.Client.Clicked" target="Final_1_app_service" cond="::Generic.Client.Clicked.id=&quot;app_exit_app_confirm&quot;">
                <send event="PROJECT_NAME.Logout"/>
            </transition>
        </state>
    </state>
</scxml>
